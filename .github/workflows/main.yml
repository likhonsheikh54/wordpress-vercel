name: WordPress Vercel Deployment

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PHP_VERSION: '8.1'

jobs:
  setup-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ env.PHP_VERSION }}

    - name: Clean up old files
      run: |
        rm -rf public api
        git rm -rf public api || true
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -m "Clean up old files" || echo "No changes to commit"

    - name: Get latest WordPress version
      id: wp-version
      run: |
        LATEST_WP_VERSION=$(curl -s https://api.wordpress.org/core/version-check/1.7/ | jq -r '.offers[0].version')
        echo "WORDPRESS_VERSION=${LATEST_WP_VERSION}" >> $GITHUB_ENV
        echo "Latest WordPress version: ${LATEST_WP_VERSION}"

    - name: Download and extract WordPress
      run: |
        wget https://wordpress.org/wordpress-${{ env.WORDPRESS_VERSION }}.zip
        unzip wordpress-${{ env.WORDPRESS_VERSION }}.zip
        mkdir -p public api
        mv wordpress/* public/
        rm -rf wordpress wordpress-${{ env.WORDPRESS_VERSION }}.zip

    - name: Configure WordPress
      run: |
        mv public/wp-config-sample.php api/wp-config.php
        sed -i "s/define( 'DB_NAME', '.*' );/define( 'DB_NAME', getenv('MYSQL_DATABASE') );/" api/wp-config.php
        sed -i "s/define( 'DB_USER', '.*' );/define( 'DB_USER', getenv('MYSQL_USER') );/" api/wp-config.php
        sed -i "s/define( 'DB_PASSWORD', '.*' );/define( 'DB_PASSWORD', getenv('MYSQL_PASSWORD') );/" api/wp-config.php
        sed -i "s/define( 'DB_HOST', '.*' );/define( 'DB_HOST', getenv('MYSQL_HOST') );/" api/wp-config.php
        echo "
        define('WP_HOME', 'https://' . \$_SERVER['HTTP_HOST']);
        define('WP_SITEURL', 'https://' . \$_SERVER['HTTP_HOST']);
        define('FORCE_SSL_ADMIN', true);
        define('AUTOMATIC_UPDATER_DISABLED', true);
        define('DISABLE_WP_CRON', true);
        if (isset(\$_SERVER['HTTP_X_FORWARDED_PROTO']) && \$_SERVER['HTTP_X_FORWARDED_PROTO'] === 'https') {
            \$_SERVER['HTTPS'] = 'on';
        }
        if ( !defined('ABSPATH') )
            define('ABSPATH', dirname(__FILE__) . '/../public/');
        require_once(ABSPATH . 'wp-settings.php');" >> api/wp-config.php

    - name: Create index.php
      run: |
        echo "<?php
        require_once(__DIR__ . '/wp-config.php');" > api/index.php

    - name: Create php.ini
      run: |
        echo "opcache.memory_consumption=256
        opcache.max_accelerated_files=10000
        opcache.file_cache='/tmp'
        opcache.file_cache_only=0
        opcache.file_cache_consistency_checks=0
        session.save_path='/tmp'
        session.auto_start=0" > api/php.ini

    - name: Generate vercel.json
      run: |
        echo '{
          "version": 2,
          "framework": null,
          "functions": {
            "api/**/*.php": {
              "runtime": "vercel-php@0.6.0"
            }
          },
          "routes": [
            { "src": "/wp-admin/(.*)", "dest": "/public/wp-admin/$1" },
            { "src": "/wp-content/(.*)", "dest": "/public/wp-content/$1" },
            { "src": "/wp-includes/(.*)", "dest": "/public/wp-includes/$1" },
            { "src": "/(.*)\\.php$", "dest": "/api/index.php" },
            { "src": "/(.*)", "dest": "/api/index.php" }
          ],
          "env": {
            "PHP_VERSION": "${{ env.PHP_VERSION }}"
          }
        }' > vercel.json

    - name: Create .vercelignore
      run: |
        echo ".git
        .github
        .gitignore
        README.md
        node_modules" > .vercelignore

    - name: Remove unnecessary files
      run: |
        rm -rf public/wp-content/plugins/hello.php
        rm -rf public/wp-content/themes/twenty*
        rm -rf public/license.txt
        rm -rf public/readme.html

    - name: Update .gitignore
      run: |
        echo ".vercel
        node_modules
        .env
        .env.local
        .DS_Store
        public/wp-content/uploads/*
        public/wp-content/cache/*
        public/wp-content/upgrade/*" > .gitignore

    - name: Commit and push changes
      run: |
        git add .
        git commit -m "Setup WordPress ${{ env.WORDPRESS_VERSION }} for Vercel deployment" || echo "No changes to commit"
        git push origin HEAD:main || echo "No changes to push"

    - name: Deploy to Vercel
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      run: |
        npx vercel deploy --token $VERCEL_TOKEN --prod --yes

